# NB: don't set `language: haskell` here

# The following enables several GHC versions to be tested; often it's enough to test only against the last release in a major GHC version. Feel free to omit lines listings versions you don't need/want testing for.
env:
 - CABALVER=1.20 GHCVER=7.8.4
 - CABALVER=1.22 GHCVER=7.10.2

services:
  - redis-server

# Note: the distinction between `before_install` and `install` is not important.
before_install:
 - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
 - travis_retry sudo apt-get update
 - travis_retry sudo apt-get install cabal-install-$CABALVER ghc-$GHCVER # see note about happy/alex
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.cabal/bin:$PATH

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal update
 - cabal install --enable-tests

# Here starts the actual work to be performed for the package under test; any command which exits with a non-zero exit code causes the build to fail.
script:
 - cabal configure --enable-tests --enable-benchmarks -v2
 # this builds all libraries and executables
 # (including tests/benchmarks)
 - cabal build
 - cabal test --show-details=streaming

 # Disabled due to warnings in cabal file around `ghc-prof-options: -auto-all`
 # - cabal check

 # # tests that a source-distribution can be generated
 # - cabal sdist

 # # check that the generated source-distribution can be built & installed
 # - SRC_TGZ=$(cabal info . | awk '{print $2;exit}').tar.gz &&
 #   (cd dist && cabal install --force-reinstalls "$SRC_TGZ")
